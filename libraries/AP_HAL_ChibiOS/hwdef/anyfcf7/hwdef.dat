# hw definition file for processing by chibios_pins.py
# for ANYFCF7 hardware.
# https://github.com/sambas/hw/tree/master/AnyFCF7
@ thanks to betaflight for pin information and sambas for the design

# MCU class and specific type
MCU STM32F7xx STM32F745xx

# board ID for firmware load
APJ_BOARD_ID 132

# crystal frequency, setup to use external oscillator
OSCILLATOR_HZ 8000000

define STM32_LSECLK   32768U
define STM32_LSEDRV   (3U << 3U)

define STM32_PLLSRC     STM32_PLLSRC_HSE
define STM32_PLLM_VALUE 8
define STM32_PLLN_VALUE 432
define STM32_PLLP_VALUE 2
define STM32_PLLQ_VALUE 9

FLASH_SIZE_KB 1024

# reserve one sector for bootloader and 2 for storage
FLASH_RESERVE_START_KB 96

# board voltage
STM32_VDD 330U

#STDOUT_SERIAL SD1
#STDOUT_BAUDRATE 115200

I2C_ORDER I2C2 I2C4

# order of UARTs (and USB)
#UART_ORDER OTG1 USART1 USART2 USART3 USART6 UART7 UART8
#UART_ORDER OTG1 USART1 USART2 USART3 USART6
#u1 s3
#u2 s1
#u3 s2
#u6 s4
#UART_ORDER OTG1 USART2 USART3 USART1 USART6
#u1 s2
#u2 s3
#u3 s1
#u6 s4
UART_ORDER OTG1 USART3 USART1 USART2 USART6 UART4 UART5
#u1 s1
#u2 s2
#u3 s3
#u6 s4

PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

PB7 LED0 OUTPUT LOW
PB6 LED1 OUTPUT LOW
PB2 BUZZER OUTPUT

# SPI1 for IMU MPU6000
PA4 MPU6000_CS CS
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# SPI3 ON HEADER
#PD2 EXT_SPI3_CS CS
#PC10 SPI3_SCK SPI3
#PC11 SPI3_MISO SPI3
#PC12 SPI3_MOSI SPI3

# SPI4 for SDCard
PE11 SDCARD_CS CS
PE12 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE14 SPI4_MOSI SPI4
#SDCARD DETECT PIN IS PD3 (INVERTED)

# EXTERNAL I2C device2
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

PD12 I2C4_SCL I2C4 NODMA
PD13 I2C4_SDA I2C4 NODMA

PC0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC1 BATT_CURRENT_SENS ADC1 SCALE(1)
PC2 RSSI_ADC ADC1

# USART1
PA10 USART1_RX USART1
PA9  USART1_TX USART1

# USART2
PD6 USART2_RX USART2
PD5 USART2_TX USART2

# USART3
PD9 USART3_RX USART3
PD8 USART3_TX USART3

# UART4 used as SPI3
PC11 UART4_RX UART4
PC10 UART4_TX UART4

# UART5 used as SPI3
PD2 UART5_RX UART5
PC12 UART5_TX UART5

# USART6
PC7 USART6_RX USART6
PC6 USART6_TX USART6

# UART7
PE7 UART7_RX UART7
PE8 UART7_TX UART7

# UART8
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# CAN 2
PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2

# CAN 1 not connected
#PD0 CAN1_RX CAN1
#PD1 CAN1_TX CAN1

PB8 TIM4_CH3 TIM4 PWM(1)
PA2 TIM5_CH3 TIM5 PWM(2)
PA1 TIM5_CH2 TIM5 PWM(3)
PA3 TIM5_CH4 TIM5 PWM(4)

#PB5 TIM3_CH2 TIM3 PWM(5)
#PA0 TIM5_CH1 TIM5 PWM(6)
#PB3 TIM2_CH2 TIM2 PWM(7)
#PB4 TIM3_CH1 TIM3 PWM(8)

# no dshot
#PE6 TIM9_CH2 TIM9 PWM(9)
#PB9 TIM4_CH4 TIM4 PWM(10)

#PB14 TIM8_CH2N TIM8 #PAD 1 RCIN
#PB15 TIM12_CH2 TIM1 #PAD 2 INPUT

PB14 TIM12_CH1 TIM12 RCININT PULLDOWN LOW
#PB15 TIM12_CH2 TIM12 RCININT PULLDOWN LOW

define HAL_STORAGE_SIZE 16384
define STORAGE_FLASH_PAGE 1

# spi devices
SPIDEV mpu6000 SPI1 DEVID2 MPU6000_CS MODE3  1*MHZ  4*MHZ
SPIDEV sdcard  SPI4 DEVID1 SDCARD_CS MODE0 400*KHZ 25*MHZ

define HAL_BARO_DEFAULT HAL_BARO_MS5611_I2C
define HAL_BARO_MS5611_I2C_BUS 0
define HAL_BARO_MS5611_I2C_ADDR 0x77

# also allow for probing of external barometers
#define HAL_BARO_DEFAULT HAL_BARO_FAKE
#define HAL_PROBE_EXTERNAL_I2C_BAROS

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 0
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

#define HAL_COMPASS_DEFAULT HAL_COMPASS_HMC5843
#define HAL_COMPASS_HMC5843_I2C_BUS 0
#define HAL_COMPASS_HMC5843_I2C_ADDR 0x1E
#define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# probe for an invensense IMU
define HAL_INS_DEFAULT HAL_INS_MPU60XX_SPI
define HAL_INS_DEFAULT_ROTATION ROTATION_YAW_180

define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

define BOARD_PWM_COUNT_DEFAULT 4

#To complementary channels work we define this
#define STM32_PWM_USE_ADVANCED TRUE
